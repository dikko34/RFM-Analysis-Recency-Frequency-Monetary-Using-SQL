

-- 1. Filtering  Valid Data:
--Exclude rows with null CustomerID
--Exclude negative quantities

SELECT *
FROM [E-Commerce]
WHERE CustomerID IS NOT NULL AND Quantity > 0

-- 2. Calculate Metrics:

SELECT MAX(InvoiceDate) Most_Recent_Purchase
FROM [E-Commerce]
WHERE CustomerID IS NOT NULL AND Quantity > 0

DECLARE @Today_Date AS DATE = '2011-12-09 12:50:00.000';

SELECT CustomerID,DATEDIFF(DAY,MAX(InvoiceDate),@Today_Date) Recency_Of_Purchase,
					COUNT(DISTINCT(InvoiceNo)) Frequency,
					SUM(Quantity*UnitPrice) Monetary
FROM [E-Commerce]
WHERE CustomerID IS NOT NULL AND Quantity > 0
GROUP BY CustomerID;


-- 3.Segmenting With RFM Scores

WITH RFM AS 
(

SELECT CustomerID,DATEDIFF(DAY,MAX(InvoiceDate),'2011-12-09 12:50:00.000') Recency_Of_Purchase,
					COUNT(DISTINCT(InvoiceNo)) Frequency,
					SUM(Quantity*UnitPrice) Monetary
FROM [E-Commerce]
WHERE CustomerID IS NOT NULL AND Quantity > 0
GROUP BY CustomerID
), RFM_Score AS
(
SELECT *,NTILE(5) OVER(ORDER BY Recency_Of_Purchase DESC) R,
		NTILE(5) OVER(ORDER BY Frequency ASC) F,
		NTILE(5) OVER(ORDER BY Monetary ASC) M
FROM RFM
), RFM_Segment AS
(
SELECT CustomerID,Recency_Of_Purchase,Frequency,Monetary,R,F,M,CONCAT_WS('',R,F,M) RFM_Score
FROM RFM_Score
)
SELECT *,
CASE
	WHEN RFM_Score <=152 THEN 'Lost'
	WHEN RFM_Score <=211 THEN 'At Risk'
	WHEN RFM_Score <=321 THEN 'Potential Loyalist'
	WHEN RFM_Score <= 421 THEN 'Loyal'
	WHEN RFM_Score >421 THEN 'Champion'
END Segment
FROM RFM_Segment


--- Creating View
CREATE VIEW Customer_Segment AS
WITH RFM AS 
(

SELECT CustomerID,DATEDIFF(DAY,MAX(InvoiceDate),'2011-12-09 12:50:00.000') Recency_Of_Purchase,
					COUNT(DISTINCT(InvoiceNo)) Frequency,
					SUM(Quantity*UnitPrice) Monetary
FROM [E-Commerce]
WHERE CustomerID IS NOT NULL AND Quantity > 0
GROUP BY CustomerID
), RFM_Score AS
(
SELECT *,NTILE(5) OVER(ORDER BY Recency_Of_Purchase DESC) R,
		NTILE(5) OVER(ORDER BY Frequency ASC) F,
		NTILE(5) OVER(ORDER BY Monetary ASC) M
FROM RFM
), RFM_Segment AS
(
SELECT CustomerID,Recency_Of_Purchase,Frequency,Monetary,R,F,M,CONCAT_WS('',R,F,M) RFM_Score
FROM RFM_Score
)
SELECT *,
CASE
	WHEN RFM_Score <=152 THEN 'Lost'
	WHEN RFM_Score <=211 THEN 'At Risk'
	WHEN RFM_Score <=321 THEN 'Potential Loyalist'
	WHEN RFM_Score <= 421 THEN 'Loyal'
	WHEN RFM_Score >421 THEN 'Champion'
END Segment
FROM RFM_Segment

-- Additional Analysis

-- 1.Customers at risk of Churning
WITH RFM AS 
(
SELECT CustomerID,DATEDIFF(DAY,MAX(InvoiceDate),'2011-12-09 12:50:00.000') Recency_Of_Purchase,
					COUNT(DISTINCT(InvoiceNo)) Frequency,
					SUM(Quantity*UnitPrice) Monetary
FROM [E-Commerce]
WHERE CustomerID IS NOT NULL AND Quantity > 0
GROUP BY CustomerID
), RFM_Score AS
(
SELECT *,NTILE(5) OVER(ORDER BY Recency_Of_Purchase DESC) R,
		NTILE(5) OVER(ORDER BY Frequency ASC) F,
		NTILE(5) OVER(ORDER BY Monetary ASC) M
FROM RFM
)
SELECT CustomerID,Recency_Of_Purchase
FROM RFM_Score
WHERE R = 1



-- 2. Revenue generated by each group 
WITH RFM AS 
(
SELECT CustomerID,DATEDIFF(DAY,MAX(InvoiceDate),'2011-12-09 12:50:00.000') Recency_Of_Purchase,
					COUNT(DISTINCT(InvoiceNo)) Frequency,
					SUM(Quantity*UnitPrice) Monetary
FROM [E-Commerce]
WHERE CustomerID IS NOT NULL AND Quantity > 0
GROUP BY CustomerID
), RFM_Score AS
(
SELECT *,NTILE(5) OVER(ORDER BY Recency_Of_Purchase DESC) R,
		NTILE(5) OVER(ORDER BY Frequency ASC) F,
		NTILE(5) OVER(ORDER BY Monetary ASC) M
FROM RFM
)
SELECT (R + F + M)/3 RFM_group,SUM(Monetary) Total_Revenue,
								SUM(Monetary)/COUNT(CustomerID)Average_Revenue_Generated
FROM RFM_Score
GROUP BY (R + F + M)/3
ORDER BY  2


CREATE VIEW MONTHS AS
SELECT
CASE
	WHEN Months = 1 THEN 'January'
	WHEN Months = 2 THEN 'Febuary'
	WHEN Months = 3 THEN 'March'
	WHEN Months = 4 THEN 'April'
	WHEN Months = 5 THEN 'May'
	WHEN Months = 6 THEN 'June'
	WHEN Months = 7 THEN 'July'
	WHEN Months = 8 THEN 'August'
	WHEN Months = 9 THEN 'September'
	WHEN Months = 10 THEN 'October'
	WHEN Months = 11 THEN 'November'
	ELSE 'December'
END Months
FROM
(
SELECT *,MONTH(InvoiceDate)Months
FROM [E-Commerce]
WHERE CustomerID IS NOT NULL AND Quantity > 0
) Months